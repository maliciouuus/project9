# Generated by Django 3.2.4 on 2025-03-17 16:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Le titre du livre ou de l'article", max_length=128)),
                ('description', models.TextField(blank=True, help_text="La description du livre ou de l'article", max_length=2048)),
                ('image', models.ImageField(blank=True, help_text="La couverture du livre ou une image de l'article", null=True, upload_to='tickets/')),
                ('time_created', models.DateTimeField(auto_now_add=True, help_text="La date et l'heure de création du ticket")),
                ('user', models.ForeignKey(help_text="L'utilisateur qui a créé le ticket", on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(help_text='La note attribuée (entre 0 et 5)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('headline', models.CharField(help_text='Le titre de la critique', max_length=128)),
                ('body', models.CharField(blank=True, help_text='Le contenu de la critique', max_length=8192)),
                ('time_created', models.DateTimeField(auto_now_add=True, help_text="La date et l'heure de création de la critique")),
                ('ticket', models.ForeignKey(help_text='Le ticket auquel cette critique répond', on_delete=django.db.models.deletion.CASCADE, to='listings.ticket')),
                ('user', models.ForeignKey(help_text="L'utilisateur qui a écrit la critique", on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFollows',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed_user', models.ForeignKey(help_text="L'utilisateur qui est suivi", on_delete=django.db.models.deletion.CASCADE, related_name='followed_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text="L'utilisateur qui suit", on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'followed_user')},
            },
        ),
        migrations.CreateModel(
            name='UserBlocks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_created', models.DateTimeField(auto_now_add=True, help_text="La date et l'heure du blocage")),
                ('blocked_user', models.ForeignKey(help_text="L'utilisateur qui est bloqué", on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text="L'utilisateur qui bloque", on_delete=django.db.models.deletion.CASCADE, related_name='blocking', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'blocked_user')},
            },
        ),
    ]
